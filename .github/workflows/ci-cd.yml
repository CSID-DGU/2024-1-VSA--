name: CI/CD Pipeline for FastAPI

on:
  push:
    branches:
      - main
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - main
  workflow_dispatch: # 수동 실행 추가

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > ./server/.env

      - name: Debug Secrets
        run: |
          DOCKERHUB_TOKEN="${{ secrets.DOCKERHUB_TOKEN }}"
          echo "Username: ${{ secrets.DOCKERHUB_USERNAME }}"
          echo "Token Length: ${#DOCKERHUB_TOKEN}"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker buildx create --use --name mybuilder || true
          docker buildx build --platform linux/amd64 --push \
          --tag ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-server:latest ./server

  deploy:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            if [ ! -d "/home/ubuntu/2024-1-VSA-a2b1" ]; then
              echo "Cloning repository..."
              git clone https://github.com/CSID-DGU/2024-1-VSA-a2b1.git /home/ubuntu
            fi

            cd /home/ubuntu/2024-1-VSA-a2b1
            git pull origin main

            # deploy.sh 확인 및 실행
            if [ -f "server/scripts/deploy.sh" ]; then
              chmod +x server/scripts/deploy.sh
              server/scripts/deploy.sh
            else
              echo "Error: server/scripts/deploy.sh not found!"
              exit 1
            fi
